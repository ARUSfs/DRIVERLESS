#!/usr/bin/env python3

import random
import rospy
from matplotlib import pyplot as plt
import numpy as np
import math
from common_msgs.msg import Trajectory
from visualization_msgs.msg import Marker, MarkerArray
from sensor_msgs.msg import PointCloud2
from geometry_msgs.msg import Point
from sensor_msgs import point_cloud2



def find_circle_center(point1, point2, point3):
    # Paso 1: Calcular los puntos medios
    mid_point1 = ((point1[0] + point2[0]) / 2, (point1[1] + point2[1]) / 2)
    mid_point2 = ((point2[0] + point3[0]) / 2, (point2[1] + point3[1]) / 2)

    # Paso 2: Calcular las pendientes de las mediatrices
    slope1 = -(point2[0] - point1[0]) / (point2[1] - point1[1]) if point2[1] != point1[1] else float('inf')
    slope2 = -(point3[0] - point2[0]) / (point3[1] - point2[1]) if point3[1] != point2[1] else float('inf')

    # Paso 3: Calcular las ecuaciones de las mediatrices
    if slope1 != float('inf'):
        intercept1 = mid_point1[1] - slope1 * mid_point1[0]
    else:
        intercept1 = mid_point1[0]

    if slope2 != float('inf'):
        intercept2 = mid_point2[1] - slope2 * mid_point2[0]
    else:
        intercept2 = mid_point2[0]

    # Paso 4: Resolver el sistema de ecuaciones para encontrar el centro
    if slope1 != slope2:
        center_x = (intercept2 - intercept1) / (slope1 - slope2)
        center_y = slope1 * center_x + intercept1
    else:
        # Si las mediatrices son paralelas, el centro es el punto medio entre los puntos medios
        center_x = (mid_point1[0] + mid_point2[0]) / 2
        center_y = (mid_point1[1] + mid_point2[1]) / 2

    # Paso 5: Verificar que el tercer punto est√© en la circunferencia
    radius = ((point1[0] - center_x)**2 + (point1[1] - center_y)**2)**0.5

    # Devolver el centro y el radio
    return center_x, center_y, radius

def dist(x1,y1,x2,y2):
    return math.sqrt((x1-x2)**2 + (y1-y2)**2)

def handle(msg: PointCloud2):
    # l = [[-15, -1.5], [-15, 1.5], [-11.5, -1.5], [-11.5, 1.5], [-8.0, -1.5], [-8.0, 1.5], [2.8534708288888204, -2.0540503304944577], [2.8534708288888204, 2.0540503304944577], [5.292261931665607, -3.6356841367395303], [5.292261931665607, 3.6356841367395303], [6.961956779412208, -6.015050996946027], [9.701087315574387, -4.791464503941184], [6.961956779412208, 6.015050996946027], [9.701087315574387, 4.791464503941184], [7.619907507940066, -8.846370191044448], [10.617903904506651, -8.73674534817669], [7.619907507940066, 8.846370191044448], [10.617903904506651, 8.73674534817669], [7.170497640241987, -11.718181172090391], [9.991677039681456, -12.738449174224316], [7.170497640241987, 11.718181172090391], [9.991677039681456, 12.738449174224316], [5.679037520114846, -14.213138937286189], [7.913412937864948, -16.215029666710265], [5.679037520114846, 14.213138937286189], [7.913412937864948, 16.215029666710265], [3.3622731075522765, -15.968664555647855], [4.685134658064648, -18.6612538890175], [3.3622731075522765, 15.968664555647855], [4.685134658064648, 18.6612538890175], [0.5568874421498542, -16.729636833983317], [0.775990698077667, -19.72162509653413], [0.5568874421498542, 16.729636833983317], [0.775990698077667, 19.72162509653413], [-2.32942771082538, -16.3854677218509], [-3.2459238593468402, -19.242045186185685], [-2.32942771082538, 16.3854677218509], [-3.2459238593468402, 19.242045186185685], [-4.877219534477142, -14.986173484253351], [-6.796125580828804, -17.292208953467785], [-4.877219534477142, 14.986173484253351], [-6.796125580828804, 17.292208953467785], [-6.716231005349602, -12.735106104089], [-9.358682548437972, -14.155475718812543], [-6.716231005349602, 12.735106104089], [-9.358682548437972, 14.155475718812543], [-7.57920837571293, -9.959401220950078], [-10.561191998944246, -10.287690225914043], [-7.57920837571293, 9.959401220950078], [-10.561191998944246, 10.287690225914043], [-7.3407397380893435, -7.0624372500125006], [-10.228899635042527, -6.250937151656763], [-7.3407397380893435, 7.0624372500125006], [-10.228899635042527, 6.250937151656763], [-6.0354804701805875, -4.465214544201771], [-8.410095737136885, -2.6318563320844355], [-6.0354804701805875, 4.465214544201771], [-8.410095737136885, 2.6318563320844355], [-3.8531169533022904, -2.5451736539499397], [-3.8531169533022904, 2.5451736539499397], [-1.1108004603162058, -1.5813439011735628], [-1.1108004603162058, 1.5813439011735628], [11.0, -1.5], [11.0, 1.5], [14.5, -1.5], [14.5, 1.5], [18.0, -1.5], [18.0, 1.5], [21.5, -1.5], [21.5, 1.5], [25.0, -1.5], [25.0, 1.5]]
    # l=[[0,6],[0,9],[3,6]]
    ruta = np.array([[-15, 0], [0, 0], [0.9979995752873556, -0.054739703419407704], [1.9840254079415232, -0.21830206077232717], [2.9462474132187495, -0.4887246928955644], [3.8731210985836952, -0.8627631384893206], [4.753526071566409, -1.3359297803307477], [5.576899459375653, -1.9025476865530253], [6.333362639534251, -2.555818721016159], [7.013839761054889, -3.287905105598722], [7.610166634169747, -4.09002345584714], [8.115188682182861, -4.952550161766923], [8.522846780244137, -5.8651368494241805], [8.82824995117345, -6.8168345380787825], [9.027734046148865, -7.7962250032437375], [9.118905706223359, -8.791557769610568], [9.100671077230842, -9.79089109023472], [8.973248933567604, -10.782235220548937], [8.738168053393238, -11.753696268239803], [8.398248876742883, -12.693618893113538], [7.957569666611924, -13.590726144874743], [7.421417579003787, -14.434254761080277], [6.796225228989897, -15.214084301998227], [6.089493513845838, -15.920858573045019], [5.309701619211953, -16.546097878005515], [4.466205288001365, -17.082300756250742], [3.5691245725989127, -17.523033983336255], [2.629222417071311, -17.863009755177075], [1.6577755261280096, -18.09814912976325], [0.6664390701137606, -18.225630965258723], [-0.33289315073229986, -18.243925767336606], [-1.328231405037771, -18.1528140396594], [-2.307633880015217, -17.95338891733967], [-3.259349956265517, -17.64804305178567], [-4.171961188692029, -17.24043990428414], [-5.0345183020727795, -16.735469792732523], [-5.8366725576529745, -16.139191218860567], [-6.56879991465517, -15.458758179882324], [-7.222116497049222, -14.702334336674596], [-7.788783980241325, -13.878995068270065], [-8.26200363327973, -12.998618587790043], [-8.636097888282896, -12.071767426180035], [-8.906578458441002, -11.109561705675764], [-9.070200187328588, -10.123545723432061], [-9.124999983458032, -9.12554944600997], [-9.070320372947128, -8.127546576475732], [-8.906817387721892, -7.141510896986074], [-8.636452694613979, -6.179272610424557], [-8.262470059785757, -5.252376404665185], [-7.78935643085684, -4.371942942371805], [-7.222788103658737, -3.5485354381431033], [-6.5695626194950485, -2.7920329237763006], [-5.8375172099864, -2.111511722180425], [-5.035434767977945, -1.5151365519847264], [-4.1729384726463365, -1.0100625693411498], [-3.2603763330670397, -0.6023495221981374], [-2.3086970354586516, -0.2968890470007999], [-1.3293185836570984, -0.09734598009295148], [-0.33399130883761785, -0.006114387951731359], [0.9979995752873556, -0.054739703419407704], [1.9840254079415232, -0.21830206077232717], [2.9462474132187495, -0.4887246928955644], [3.8731210985836952, -0.8627631384893206], [4.753526071566409, -1.3359297803307477], [5.576899459375653, -1.9025476865530253], [6.333362639534251, -2.555818721016159], [7.013839761054889, -3.287905105598722], [7.610166634169747, -4.09002345584714], [8.115188682182861, -4.952550161766923], [8.522846780244137, -5.8651368494241805], [8.82824995117345, -6.8168345380787825], [9.027734046148865, -7.7962250032437375], [9.118905706223359, -8.791557769610568], [9.100671077230842, -9.79089109023472], [8.973248933567604, -10.782235220548937], [8.738168053393238, -11.753696268239803], [8.398248876742883, -12.693618893113538], [7.957569666611924, -13.590726144874743], [7.421417579003787, -14.434254761080277], [6.796225228989897, -15.214084301998227], [6.089493513845838, -15.920858573045019], [5.309701619211953, -16.546097878005515], [4.466205288001365, -17.082300756250742], [3.5691245725989127, -17.523033983336255], [2.629222417071311, -17.863009755177075], [1.6577755261280096, -18.09814912976325], [0.6664390701137606, -18.225630965258723], [-0.33289315073229986, -18.243925767336606], [-1.328231405037771, -18.1528140396594], [-2.307633880015217, -17.95338891733967], [-3.259349956265517, -17.64804305178567], [-4.171961188692029, -17.24043990428414], [-5.0345183020727795, -16.735469792732523], [-5.8366725576529745, -16.139191218860567], [-6.56879991465517, -15.458758179882324], [-7.222116497049222, -14.702334336674596], [-7.788783980241325, -13.878995068270065], [-8.26200363327973, -12.998618587790043], [-8.636097888282896, -12.071767426180035], [-8.906578458441002, -11.109561705675764], [-9.070200187328588, -10.123545723432061], [-9.124999983458032, -9.12554944600997], [-9.070320372947128, -8.127546576475732], [-8.906817387721892, -7.141510896986074], [-8.636452694613979, -6.179272610424557], [-8.262470059785757, -5.252376404665185], [-7.78935643085684, -4.371942942371805], [-7.222788103658737, -3.5485354381431033], [-6.5695626194950485, -2.7920329237763006], [-5.8375172099864, -2.111511722180425], [-5.035434767977945, -1.5151365519847264], [-4.1729384726463365, -1.0100625693411498], [-3.2603763330670397, -0.6023495221981374], [-2.3086970354586516, -0.2968890470007999], [-1.3293185836570984, -0.09734598009295148], [-0.33399130883761785, -0.006114387951731359], [0.9979995752873556, 0.054739703419407704], [1.9840254079415232, 0.21830206077232717], [2.9462474132187495, 0.4887246928955644], [3.8731210985836952, 0.8627631384893206], [4.753526071566409, 1.3359297803307477], [5.576899459375653, 1.9025476865530253], [6.333362639534251, 2.555818721016159], [7.013839761054889, 3.287905105598722], [7.610166634169747, 4.09002345584714], [8.115188682182861, 4.952550161766923], [8.522846780244137, 5.8651368494241805], [8.82824995117345, 6.8168345380787825], [9.027734046148865, 7.7962250032437375], [9.118905706223359, 8.791557769610568], [9.100671077230842, 9.79089109023472], [8.973248933567604, 10.782235220548937], [8.738168053393238, 11.753696268239803], [8.398248876742883, 12.693618893113538], [7.957569666611924, 13.590726144874743], [7.421417579003787, 14.434254761080277], [6.796225228989897, 15.214084301998227], [6.089493513845838, 15.920858573045019], [5.309701619211953, 16.546097878005515], [4.466205288001365, 17.082300756250742], [3.5691245725989127, 17.523033983336255], [2.629222417071311, 17.863009755177075], [1.6577755261280096, 18.09814912976325], [0.6664390701137606, 18.225630965258723], [-0.33289315073229986, 18.243925767336606], [-1.328231405037771, 18.1528140396594], [-2.307633880015217, 17.95338891733967], [-3.259349956265517, 17.64804305178567], [-4.171961188692029, 17.24043990428414], [-5.0345183020727795, 16.735469792732523], [-5.8366725576529745, 16.139191218860567], [-6.56879991465517, 15.458758179882324], [-7.222116497049222, 14.702334336674596], [-7.788783980241325, 13.878995068270065], [-8.26200363327973, 12.998618587790043], [-8.636097888282896, 12.071767426180035], [-8.906578458441002, 11.109561705675764], [-9.070200187328588, 10.123545723432061], [-9.124999983458032, 9.12554944600997], [-9.070320372947128, 8.127546576475732], [-8.906817387721892, 7.141510896986074], [-8.636452694613979, 6.179272610424557], [-8.262470059785757, 5.252376404665185], [-7.78935643085684, 4.371942942371805], [-7.222788103658737, 3.5485354381431033], [-6.5695626194950485, 2.7920329237763006], [-5.8375172099864, 2.111511722180425], [-5.035434767977945, 1.5151365519847264], [-4.1729384726463365, 1.0100625693411498], [-3.2603763330670397, 0.6023495221981374], [-2.3086970354586516, 0.2968890470007999], [-1.3293185836570984, 0.09734598009295148], [-0.33399130883761785, 0.006114387951731359], [0.9979995752873556, 0.054739703419407704], [1.9840254079415232, 0.21830206077232717], [2.9462474132187495, 0.4887246928955644], [3.8731210985836952, 0.8627631384893206], [4.753526071566409, 1.3359297803307477], [5.576899459375653, 1.9025476865530253], [6.333362639534251, 2.555818721016159], [7.013839761054889, 3.287905105598722], [7.610166634169747, 4.09002345584714], [8.115188682182861, 4.952550161766923], [8.522846780244137, 5.8651368494241805], [8.82824995117345, 6.8168345380787825], [9.027734046148865, 7.7962250032437375], [9.118905706223359, 8.791557769610568], [9.100671077230842, 9.79089109023472], [8.973248933567604, 10.782235220548937], [8.738168053393238, 11.753696268239803], [8.398248876742883, 12.693618893113538], [7.957569666611924, 13.590726144874743], [7.421417579003787, 14.434254761080277], [6.796225228989897, 15.214084301998227], [6.089493513845838, 15.920858573045019], [5.309701619211953, 16.546097878005515], [4.466205288001365, 17.082300756250742], [3.5691245725989127, 17.523033983336255], [2.629222417071311, 17.863009755177075], [1.6577755261280096, 18.09814912976325], [0.6664390701137606, 18.225630965258723], [-0.33289315073229986, 18.243925767336606], [-1.328231405037771, 18.1528140396594], [-2.307633880015217, 17.95338891733967], [-3.259349956265517, 17.64804305178567], [-4.171961188692029, 17.24043990428414], [-5.0345183020727795, 16.735469792732523], [-5.8366725576529745, 16.139191218860567], [-6.56879991465517, 15.458758179882324], [-7.222116497049222, 14.702334336674596], [-7.788783980241325, 13.878995068270065], [-8.26200363327973, 12.998618587790043], [-8.636097888282896, 12.071767426180035], [-8.906578458441002, 11.109561705675764], [-9.070200187328588, 10.123545723432061], [-9.124999983458032, 9.12554944600997], [-9.070320372947128, 8.127546576475732], [-8.906817387721892, 7.141510896986074], [-8.636452694613979, 6.179272610424557], [-8.262470059785757, 5.252376404665185], [-7.78935643085684, 4.371942942371805], [-7.222788103658737, 3.5485354381431033], [-6.5695626194950485, 2.7920329237763006], [-5.8375172099864, 2.111511722180425], [-5.035434767977945, 1.5151365519847264], [-4.1729384726463365, 1.0100625693411498], [-3.2603763330670397, 0.6023495221981374], [-2.3086970354586516, 0.2968890470007999], [-1.3293185836570984, 0.09734598009295148], [-0.33399130883761785, 0.006114387951731359], [1, 0], [25, 0]])
    circulo_der = np.array([0,9.125])+np.array([[0, 0], [0.9979995752873556, -0.054739703419407704], [1.9840254079415232, -0.21830206077232717], [2.9462474132187495, -0.4887246928955644], [3.8731210985836952, -0.8627631384893206], [4.753526071566409, -1.3359297803307477], [5.576899459375653, -1.9025476865530253], [6.333362639534251, -2.555818721016159], [7.013839761054889, -3.287905105598722], [7.610166634169747, -4.09002345584714], [8.115188682182861, -4.952550161766923], [8.522846780244137, -5.8651368494241805], [8.82824995117345, -6.8168345380787825], [9.027734046148865, -7.7962250032437375], [9.118905706223359, -8.791557769610568], [9.100671077230842, -9.79089109023472], [8.973248933567604, -10.782235220548937], [8.738168053393238, -11.753696268239803], [8.398248876742883, -12.693618893113538], [7.957569666611924, -13.590726144874743], [7.421417579003787, -14.434254761080277], [6.796225228989897, -15.214084301998227], [6.089493513845838, -15.920858573045019], [5.309701619211953, -16.546097878005515], [4.466205288001365, -17.082300756250742], [3.5691245725989127, -17.523033983336255], [2.629222417071311, -17.863009755177075], [1.6577755261280096, -18.09814912976325], [0.6664390701137606, -18.225630965258723], [-0.33289315073229986, -18.243925767336606], [-1.328231405037771, -18.1528140396594], [-2.307633880015217, -17.95338891733967], [-3.259349956265517, -17.64804305178567], [-4.171961188692029, -17.24043990428414], [-5.0345183020727795, -16.735469792732523], [-5.8366725576529745, -16.139191218860567], [-6.56879991465517, -15.458758179882324], [-7.222116497049222, -14.702334336674596], [-7.788783980241325, -13.878995068270065], [-8.26200363327973, -12.998618587790043], [-8.636097888282896, -12.071767426180035], [-8.906578458441002, -11.109561705675764], [-9.070200187328588, -10.123545723432061], [-9.124999983458032, -9.12554944600997], [-9.070320372947128, -8.127546576475732], [-8.906817387721892, -7.141510896986074], [-8.636452694613979, -6.179272610424557], [-8.262470059785757, -5.252376404665185], [-7.78935643085684, -4.371942942371805], [-7.222788103658737, -3.5485354381431033], [-6.5695626194950485, -2.7920329237763006], [-5.8375172099864, -2.111511722180425], [-5.035434767977945, -1.5151365519847264]])
    circulo_izq = circulo_der.copy()
    circulo_izq[:,1]=-circulo_izq[:,1]

    cones_all = point_cloud2.read_points(msg, field_names=("x", "y", "z","color", "score"), skip_nans=True)
    l1 = [[c[0],c[1]] for c in cones_all]

    N = 500
    t = 0.2 # threshold

    max_inliers1=0
    best_center = [0,0]
    for _ in range(N):
        i,j,k = random.choices(range(len(l1)),k=3)
        x_center,y_center,r = find_circle_center(l1[i],l1[j],l1[k])
        # if (np.abs(r-7.625)<0.1) or (np.abs(r-10.625)<0.1):
        #     left_centers.append(np.array([x_center, y_center]))

        inliers=0
        for c in l1:
            d = np.linalg.norm([c[0]-x_center,c[1]-y_center])
            if np.abs(d-7.625)<t or np.abs(d-10.625)<t:
                inliers+=1

        if inliers>max_inliers1:
            best_center=[x_center,y_center]
            max_inliers1=inliers

    max_inliers2=0
    best_second_center = [0,0]
    for _ in range(N):
        i,j,k = random.choices(range(len(l1)),k=3)
        x_center,y_center,r = find_circle_center(l1[i],l1[j],l1[k])
        # if (np.abs(r-7.625)<0.1) or (np.abs(r-10.625)<0.1):
        #     left_centers.append(np.array([x_center, y_center]))

        inliers=0
        if np.linalg.norm([best_center[0]-x_center,best_center[1]-y_center]) > 15:
            for c in l1:
                d = np.linalg.norm([c[0]-x_center,c[1]-y_center])
                if (np.abs(d-7.625)<t or np.abs(d-10.625)<t):
                    inliers+=1

            if inliers>max_inliers2:
                best_second_center=[x_center,y_center]
                max_inliers2=inliers

    rospy.loginfo([max_inliers1,max_inliers2])
    if max_inliers1<4:
        #no tenemos suficiente informaci√≥n
        center = [0,0]
        ruta = []
    elif max_inliers2<max_inliers1/2:
        # si no hay suficientes inliers en el segundo, es que no podemos ver ambos centros
        best_second_center=best_center
        center = best_center
        # bastante pijer√≠o, puede que no haga falta
        if np.arctan2(center[1],center[0])<0:
            yaw = -np.arctan2(center[1],center[0])-np.pi/2
            rot = np.array([[math.cos(yaw),-math.sin(yaw)],[math.sin(yaw),math.cos(yaw)]])
            ruta = circulo_der @ rot + np.array(center)
        else:
            yaw = -np.arctan2(center[1],center[0])+np.pi/2
            rot = np.array([[math.cos(yaw),-math.sin(yaw)],[math.sin(yaw),math.cos(yaw)]])
            ruta = circulo_izq @ rot + np.array(center)
        
    else:
        center = [(best_center[0]+best_second_center[0])/2,(best_center[1]+best_second_center[1])/2]
        yaw = np.pi/2-np.arctan2(best_center[1]-best_second_center[1],best_center[0]-best_second_center[0])
        
        # con esto el giro est√° entre -90¬∫ y 90¬∫
        if yaw < -np.pi/2:
            yaw = yaw+np.pi
        elif yaw > np.pi/2:
            yaw = yaw-np.pi

        rot = np.array([[math.cos(yaw),-math.sin(yaw)],[math.sin(yaw),math.cos(yaw)]])
        ruta = ruta @ rot + np.array(center)
    

    m = MarkerArray()

    marker = Marker()
    marker.header.frame_id = "fssim/vehicle/cog"
    marker.header.stamp = rospy.Time().now()
    marker.id = 1000
    marker.action = Marker.DELETEALL
    m.markers.append(marker)

    i=0
    for c in l1:

        marker = Marker()
        marker.header.frame_id = "fssim/vehicle/cog"
        marker.header.stamp = rospy.Time().now()

        marker.id = i
        marker.type = Marker.CYLINDER
        marker.action = Marker.ADD

        marker.pose.position.x = c[0]
        marker.pose.position.y = c[1]
        marker.pose.position.z = 0
        marker.scale.x = 0.25
        marker.scale.y = 0.25
        marker.scale.z = 0.3
        marker.color.g = 1
        marker.color.a = 1.0
        i+=1
        m.markers.append(marker)

    marker = Marker()
    marker.header.frame_id = "fssim/vehicle/cog"
    marker.header.stamp = rospy.Time().now()

    marker.id = 100
    marker.type = Marker.CYLINDER
    marker.action = Marker.ADD
    marker.pose.position.x = best_center[0]
    marker.pose.position.y = best_center[1]
    marker.pose.position.z = 0
    marker.scale.x = 0.25
    marker.scale.y = 0.25
    marker.scale.z = 0.3
    marker.color.r = 1
    marker.color.a = 1.0
    m.markers.append(marker)


    marker = Marker()
    marker.header.frame_id = "fssim/vehicle/cog"
    marker.header.stamp = rospy.Time().now()
    marker.id = 101
    marker.type = Marker.CYLINDER
    marker.action = Marker.ADD
    marker.pose.position.x = best_second_center[0]
    marker.pose.position.y = best_second_center[1]
    marker.pose.position.z = 0
    marker.scale.x = 0.25
    marker.scale.y = 0.25
    marker.scale.z = 0.3
    marker.color.r = 1
    marker.color.a = 1.0
    m.markers.append(marker)

    pub.publish(m)


    marker = Marker()
    marker.header.frame_id = "fssim/vehicle/cog"
    marker.header.stamp = rospy.Time().now()
    marker.id = 102
    marker.type = Marker.LINE_STRIP
    marker.action = Marker.ADD
    marker.scale.x = 0.2
    marker.color.r = 1
    marker.color.a = 1.0
    marker.points = [Point(p[0], p[1], 0.0) for p in ruta]
    pub2.publish(marker)






if __name__ == '__main__':

    rospy.init_node('skidpad_localization', anonymous=True)
    rospy.Subscriber('/perception_map', PointCloud2, handle, queue_size=1, buff_size=2**30)
    pub = rospy.Publisher('/skidpad_center', MarkerArray, queue_size=1)
    pub2 = rospy.Publisher('/skidpad_route',Marker,queue_size=1)
    rospy.spin()

