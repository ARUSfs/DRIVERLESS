#!/usr/bin/env python3
import rospy
from common_msgs.msg import Controls, CarState
from std_msgs.msg import Int16, Bool, Float32, Float32MultiArray
import math
import time

KP = 43.87
#KI = 1.29
KI=0
profile_ax = [0,0,0,0,0,0,0,0,0,0.014239,0.44868,0.68216,0.86293,1.0101,1.1344,1.2435,1.3426,1.4341,1.5199,1.6015,1.6806,1.7579,1.8318,1.8998,1.9274,1.902,1.8943,1.8943,1.8503,1.8487,1.8345,1.4022,1.1713,0.99398,0.85146,0.7501,0.66014,0.59569,0.54723,0.51098,0.48382,0.46154,0.44263,0.42927,0.42328,0.43329,0.47382,0.48581,0.48295,0.53531,0.55385,0.55615,0.56915,0.59057,0.61709,0.64627,0.65979,0.67867,0.6834,0.68108,0.6741,0.66423,0.65463,0.64603,0.63921,0.64138,0.67682,0.73384,0.79053,0.80129,0.80638,0.80557,0.81913,0.83655,0.86963,0.89219,0.9089,0.92093,0.90456,0.88181,0.86236,0.83964,0.81142,0.77827,0.74239,0.70453,0.66878,0.62211,0.59174,0.60269,0.67014,0.69637,0.70567,0.71452,0.71653,0.6936,0.6738,0.65673,0.64322,0.65779,0.67673,0.69015,0.70452,0.72374,0.74708,0.77144,0.70432,0.57731,0.4575,0.32407,0.16428,0.0021746,-0.1309,-0.25753,-0.38927,-0.53514,-0.65692,-0.73798,-0.82504,-0.91518,-1.0068,-1.1171,-1.2352,-1.368,-1.5005,-1.6262,-1.7336,-1.7303,-1.664,-1.5905,-1.5104,-1.4225,-1.4522,-1.3646,-1.2588,-1.1575,-1.0416,-0.96006,-0.90721,-0.86,-0.81125,-0.76231,-0.68365,-0.60296,-0.4959,-0.38099,-0.26644,-0.1634,-0.074086,0.0059549,0.078914,0.14642,0.19754,0.36473,0.41778,0.43578,0.46166,0.46015,0.47722,0.48879,0.51552,0.54597,0.579,0.60327,0.63513,0.65653,0.66892,0.67423,0.67316,0.66629,0.65369,0.63628,0.61565,0.60049,0.58585,0.57236,0.58025,0.58807,0.61199,0.62746,0.65616,0.68176,0.70038,0.70014,0.69866,0.69606,0.68457,0.58906,0.48606,0.38133,0.23681,0.065339,-0.06187,-0.17104,-0.2843,-0.39886,-0.51203,-0.62292,-0.73148,-0.82861,-0.90562,-0.98567,-1.0512,-1.1032,-1.1295,-1.2932,-1.3249,-1.338,-1.282,-1.2356,-1.1855,-1.0953,-0.97403,-0.89398,-0.82922,-0.7596,-0.68819,-0.60884,-0.59506,-0.51554,-0.44741,-0.39832,-0.36255,-0.33015,-0.32993,-0.31899,-0.15735,-0.11807,-0.082156,-0.027352,0.046381,0.1111,0.16372,0.20935,0.25315,0.17731,0.099904,0.036973,-0.020176,0.0058519,-0.025767,-0.045943,-0.057885,-0.064679,-0.077568,-0.13485,-0.14782,-0.17458,-0.21097,-0.25432,-0.30264,-0.35562,-0.40379,-0.44174,-0.47519,-0.50664,-0.40561,-0.31275,-0.21895,-0.14249,-0.082673,-0.031071,0.0015364,0.024988,0.037972,0.041396,0.11175,0.12104,0.13126,0.14426,0.15758,0.17137,0.18708,0.20407,0.23413,0.24939,0.27385,0.28002,0.2958,0.2982,0.31781,0.34173,0.36927,0.40856,0.45303,0.50667,0.56714,0.6276,0.67289,0.71372,0.74962,0.78282,0.81291,0.83944,0.86232,0.86897,0.86881,0.86176,0.85802,0.83994,0.8245,0.78621,0.74843,0.7008,0.65492,0.60802,0.55895,0.51022,0.46534,0.43666,0.41539,0.39913,0.38553,0.36587,0.33937,0.3177,0.30893,0.32779,0.33954,0.28453,0.20986,0.12908,0.061391,-0.005317,-0.063042,-0.13313,-0.21323,-0.30107,-0.39624,-0.49437,-0.59563,-0.70338,-0.81759,-0.93576,-1.0491,-1.1554,-1.2656,-1.3873,-1.4986,-1.6041,-1.6255,-1.599,-1.5562,-1.5011,-1.4444,-1.3854,-1.3443,-1.2738,-1.1994,-1.1213,-1.0442,-0.96651,-0.88222,-0.78818,-0.66985,-0.53636,-0.39271,-0.24221,-0.087534,0.049391,0.18175,0.29549,0.39307,0.4742,0.53925,0.59641,0.64818,0.72415,0.77628,0.82761,0.87756,0.92641,0.97272,1.0146,1.0485,1.0599,1.0596,1.0576,1.0704,1.0806,1.0865,1.0872,1.0839,1.0773,1.0676,1.0568,1.0451,1.0322,1.0178,1.0023,0.98658,0.97126,0.95742,0.94547,0.93537,0.9302,0.93012,0.94078,0.95895,0.89282,0.66413,0.45754,0.27526,0.10966,-0.043396,-0.20158,-0.36853,-0.53802,-0.70876,-0.84395,-0.96485,-1.023,-1.0633,-1.166,-1.2877,-1.4354,-1.5822,-1.7233,-1.8577,-1.9913,-2.0444,-1.9262,-1.8206,-1.7255,-1.6348,-1.5422,-1.437,-1.3151,-1.1864,-1.0698,-0.9737,-0.88995,-0.86754,-0.85975,-0.79135,-0.69728,-0.57066,-0.44019,-0.29833,-0.17746,-0.053402,0.060984,0.1684,0.27009,0.36278,0.4473,0.52048,0.58869,0.64899,0.70431,0.77226,0.81272,0.84117,0.87957,0.91772,0.9582,0.99202,0.97374,0.88621,0.78256,0.68845,0.58244,0.4802,0.38559,0.30038,0.22035,0.14884,0.087847,-0.05856,-0.11933,-0.17958,-0.2359,-0.2655,-0.28675,-0.30449,-0.31499,-0.31897,-0.317,-0.26408,-0.14388,-0.024124,0.086697,0.1787,0.22094,0.25431,0.27212,0.29305,0.31372,0.3322,0.4442,0.47779,0.51684,0.55707,0.58687,0.62153,0.64337,0.65668,0.66366,0.66633,0.67026,0.66449,0.65048,0.63442,0.62611,0.63775,0.64165,0.65668,0.6651,0.66756,0.66482,0.65775,0.64778,0.63637,0.62447,0.61259,0.6008,0.58899,0.57656,0.56254,0.54522,0.51879,0.49476,0.46186,0.42426,0.39737,0.39181,0.38221,0.3708,0.35148,0.33397,0.31703,0.2911,0.26579,0.23351,0.20363,0.16604,0.12668,0.086456,0.052552,0.013243,-0.019919,-0.049054,-0.081812,-0.097585,-0.099901,-0.10407,-0.11532,-0.11139,-0.10809,-0.095514,-0.083358,-0.070533,-0.047452,-0.023677,0.0084287,0.039369,0.07891,0.12078,0.16384,0.20083,0.24344,0.17964,0.10354,0.031507,-0.045059,-0.12604,-0.21094,-0.29505,-0.40162,-0.53208,-0.67487,-0.82176,-0.92833,-0.99405,-1.0462,-1.0881,-1.123,-1.1513,-1.2993,-1.3357,-1.3628,-1.3946,-1.3243,-1.244,-1.1626,-1.0809,-0.99884,-0.91584,-0.82642,-0.70817,-0.57873,-0.42792,-0.26696,-0.14224,-0.40105,0,0,0,0,0,0,0,0,0,0]
profile_vx = [0,0,0,0,0,0,0,0,0,0,0.00070721,0.022993,0.056875,0.099736,0.14991,0.20625,0.26801,0.3347,0.40593,0.48142,0.56097,0.64444,0.73175,0.82274,0.9171,1.0128,1.1073,1.2014,1.2955,1.3874,1.4792,1.5703,1.64,1.6981,1.7475,1.7898,1.8271,1.8598,1.8894,1.9166,1.942,1.966,1.9889,2.0109,2.0323,2.0533,2.0748,2.0983,2.1225,2.1465,2.173,2.2005,2.2282,2.2564,2.2858,2.3164,2.3485,2.3813,2.415,2.4489,2.4828,2.5163,2.5492,2.5818,2.6139,2.6456,2.6775,2.7111,2.7475,2.7868,2.8266,2.8666,2.9067,2.9473,2.9889,3.0321,3.0764,3.1215,3.1673,3.2122,3.256,3.2988,3.3405,3.3808,3.4195,3.4564,3.4914,3.5246,3.5555,3.5849,3.6148,3.6481,3.6827,3.7177,3.7532,3.7888,3.8233,3.8567,3.8893,3.9213,3.954,3.9876,4.0219,4.0569,4.0928,4.1299,4.1682,4.2032,4.2319,4.2546,4.2707,4.2789,4.279,4.2725,4.2597,4.2403,4.2138,4.1811,4.1445,4.1035,4.058,4.008,3.9525,3.8912,3.8233,3.7487,3.6679,3.5818,3.4959,3.4133,3.3343,3.2592,3.1886,3.1164,3.0487,2.9861,2.9287,2.8769,2.8292,2.7842,2.7415,2.7012,2.6633,2.6293,2.5994,2.5748,2.5558,2.5426,2.5345,2.5308,2.5311,2.535,2.5423,2.5521,2.5702,2.591,2.6126,2.6356,2.6584,2.6821,2.7064,2.732,2.7591,2.7879,2.8178,2.8494,2.882,2.9152,2.9487,2.9821,3.0152,3.0477,3.0793,3.1099,3.1397,3.1688,3.1972,3.2261,3.2553,3.2857,3.3168,3.3494,3.3833,3.4181,3.4528,3.4875,3.5221,3.5561,3.5854,3.6095,3.6285,3.6402,3.6435,3.6404,3.6319,3.6178,3.598,3.5725,3.5416,3.5053,3.4641,3.4191,3.3702,3.318,3.2632,3.2071,3.1428,3.077,3.0106,2.9469,2.8855,2.8266,2.7722,2.7238,2.6794,2.6383,2.6005,2.5663,2.5361,2.5066,2.4809,2.4587,2.4389,2.4209,2.4045,2.3881,2.3723,2.3645,2.3586,2.3545,2.3532,2.3555,2.361,2.3691,2.3795,2.3921,2.4009,2.4059,2.4077,2.4067,2.407,2.4057,2.4034,2.4006,2.3974,2.3935,2.3868,2.3795,2.3708,2.3603,2.3477,2.3326,2.315,2.2949,2.273,2.2494,2.2242,2.2041,2.1885,2.1777,2.1706,2.1665,2.1649,2.165,2.1663,2.1681,2.1702,2.1757,2.1818,2.1883,2.1954,2.2033,2.2118,2.2211,2.2312,2.2428,2.2552,2.2688,2.2827,2.2974,2.3122,2.328,2.345,2.3633,2.3836,2.4061,2.4313,2.4595,2.4906,2.5241,2.5595,2.5967,2.6356,2.676,2.7177,2.7605,2.8037,2.8468,2.8896,2.9323,2.974,3.0149,3.054,3.0912,3.126,3.1585,3.1887,3.2165,3.2418,3.2649,3.2866,3.3072,3.3271,3.3462,3.3644,3.3812,3.397,3.4124,3.4286,3.4455,3.4596,3.4701,3.4765,3.4795,3.4793,3.4761,3.4695,3.4589,3.444,3.4243,3.3997,3.3701,3.3352,3.2946,3.2481,3.196,3.1386,3.0758,3.0069,2.9324,2.8528,2.772,2.6926,2.6153,2.5407,2.469,2.4002,2.3334,2.2702,2.2106,2.1549,2.103,2.055,2.0112,1.972,1.9388,1.9121,1.8926,1.8806,1.8763,1.8787,1.8877,1.9024,1.9219,1.9455,1.9723,2.0019,2.0341,2.0701,2.1086,2.1497,2.1933,2.2393,2.2876,2.338,2.3901,2.4428,2.4954,2.5479,2.6011,2.6547,2.7087,2.7627,2.8165,2.8701,2.9231,2.9756,3.0275,3.0788,3.1293,3.1791,3.2281,3.2763,3.3239,3.3708,3.4173,3.4635,3.5097,3.5564,3.6041,3.6484,3.6814,3.7041,3.7178,3.7232,3.7211,3.7111,3.6928,3.666,3.6308,3.5889,3.541,3.4902,3.4374,3.3795,3.3155,3.2442,3.1656,3.08,2.9878,2.8889,2.7873,2.6916,2.6012,2.5155,2.4343,2.3577,2.2863,2.221,2.1621,2.109,2.0606,2.0164,1.9733,1.9306,1.8913,1.8567,1.8283,1.8064,1.7916,1.7828,1.7802,1.7832,1.7916,1.805,1.823,1.8452,1.8711,1.9003,1.9325,1.9675,2.0059,2.0462,2.088,2.1317,2.1773,2.2249,2.2742,2.3225,2.3665,2.4054,2.4396,2.4685,2.4924,2.5115,2.5265,2.5374,2.5448,2.5492,2.5462,2.5403,2.5314,2.5197,2.5065,2.4923,2.4771,2.4615,2.4456,2.4299,2.4168,2.4096,2.4084,2.4127,2.4216,2.4326,2.4452,2.4587,2.4733,2.4889,2.5054,2.5274,2.5512,2.5768,2.6045,2.6337,2.6645,2.6965,2.7291,2.7621,2.7952,2.8285,2.8615,2.8938,2.9253,2.9564,2.988,3.0199,3.0525,3.0856,3.1187,3.1517,3.1844,3.2166,3.2482,3.2792,3.3096,3.3395,3.3687,3.3974,3.4253,3.4524,3.4782,3.5027,3.5257,3.5468,3.5665,3.5859,3.6049,3.6234,3.6408,3.6574,3.6731,3.6876,3.7008,3.7124,3.7225,3.7308,3.7371,3.7413,3.744,3.7446,3.7436,3.7412,3.7371,3.7323,3.7273,3.7221,3.7164,3.7109,3.7055,3.7008,3.6966,3.6931,3.6908,3.6896,3.69,3.692,3.6959,3.7019,3.71,3.72,3.7321,3.741,3.7462,3.7477,3.7455,3.7392,3.7288,3.7141,3.6941,3.6677,3.6342,3.5934,3.5473,3.4979,3.4459,3.3919,3.3361,3.2789,3.2144,3.1481,3.0804,3.0111,2.9453,2.8835,2.8258,2.7721,2.7225,2.677,2.636,2.6008,2.572,2.5508,2.5375,2.5305,2.5105,2.5105,2.5105,2.5105,2.5105,2.5105,2.5105,2.5105,2.5105,2.5105]
profile_t = [0,0.0496689,0.0993377,0.149007,0.198675,0.248344,0.298013,0.347682,0.397351,0.44702,0.496689,0.546358,0.596026,0.645695,0.695364,0.745033,0.794702,0.844371,0.89404,0.943709,0.993377,1.04305,1.09272,1.14238,1.19205,1.24172,1.29139,1.34106,1.39073,1.4404,1.49007,1.53974,1.5894,1.63907,1.68874,1.73841,1.78808,1.83775,1.88742,1.93709,1.98675,2.03642,2.08609,2.13576,2.18543,2.2351,2.28477,2.33444,2.38411,2.43377,2.48344,2.53311,2.58278,2.63245,2.68212,2.73179,2.78146,2.83113,2.88079,2.93046,2.98013,3.0298,3.07947,3.12914,3.17881,3.22848,3.27815,3.32781,3.37748,3.42715,3.47682,3.52649,3.57616,3.62583,3.6755,3.72517,3.77483,3.8245,3.87417,3.92384,3.97351,4.02318,4.07285,4.12252,4.17219,4.22185,4.27152,4.32119,4.37086,4.42053,4.4702,4.51987,4.56954,4.61921,4.66887,4.71854,4.76821,4.81788,4.86755,4.91722,4.96689,5.01656,5.06623,5.11589,5.16556,5.21523,5.2649,5.31457,5.36424,5.41391,5.46358,5.51325,5.56291,5.61258,5.66225,5.71192,5.76159,5.81126,5.86093,5.9106,5.96026,6.00993,6.0596,6.10927,6.15894,6.20861,6.25828,6.30795,6.35762,6.40728,6.45695,6.50662,6.55629,6.60596,6.65563,6.7053,6.75497,6.80464,6.8543,6.90397,6.95364,7.00331,7.05298,7.10265,7.15232,7.20199,7.25166,7.30132,7.35099,7.40066,7.45033,7.5,7.54967,7.59934,7.64901,7.69868,7.74834,7.79801,7.84768,7.89735,7.94702,7.99669,8.04636,8.09603,8.1457,8.19536,8.24503,8.2947,8.34437,8.39404,8.44371,8.49338,8.54305,8.59272,8.64238,8.69205,8.74172,8.79139,8.84106,8.89073,8.9404,8.99007,9.03974,9.0894,9.13907,9.18874,9.23841,9.28808,9.33775,9.38742,9.43709,9.48675,9.53642,9.58609,9.63576,9.68543,9.7351,9.78477,9.83444,9.88411,9.93377,9.98344,10.0331,10.0828,10.1325,10.1821,10.2318,10.2815,10.3311,10.3808,10.4305,10.4801,10.5298,10.5795,10.6291,10.6788,10.7285,10.7781,10.8278,10.8775,10.9272,10.9768,11.0265,11.0762,11.1258,11.1755,11.2252,11.2748,11.3245,11.3742,11.4238,11.4735,11.5232,11.5728,11.6225,11.6722,11.7219,11.7715,11.8212,11.8709,11.9205,11.9702,12.0199,12.0695,12.1192,12.1689,12.2185,12.2682,12.3179,12.3675,12.4172,12.4669,12.5166,12.5662,12.6159,12.6656,12.7152,12.7649,12.8146,12.8642,12.9139,12.9636,13.0132,13.0629,13.1126,13.1623,13.2119,13.2616,13.3113,13.3609,13.4106,13.4603,13.5099,13.5596,13.6093,13.6589,13.7086,13.7583,13.8079,13.8576,13.9073,13.957,14.0066,14.0563,14.106,14.1556,14.2053,14.255,14.3046,14.3543,14.404,14.4536,14.5033,14.553,14.6026,14.6523,14.702,14.7517,14.8013,14.851,14.9007,14.9503,15,15.0497,15.0993,15.149,15.1987,15.2483,15.298,15.3477,15.3974,15.447,15.4967,15.5464,15.596,15.6457,15.6954,15.745,15.7947,15.8444,15.894,15.9437,15.9934,16.043,16.0927,16.1424,16.1921,16.2417,16.2914,16.3411,16.3907,16.4404,16.4901,16.5397,16.5894,16.6391,16.6887,16.7384,16.7881,16.8377,16.8874,16.9371,16.9868,17.0364,17.0861,17.1358,17.1854,17.2351,17.2848,17.3344,17.3841,17.4338,17.4834,17.5331,17.5828,17.6325,17.6821,17.7318,17.7815,17.8311,17.8808,17.9305,17.9801,18.0298,18.0795,18.1291,18.1788,18.2285,18.2781,18.3278,18.3775,18.4272,18.4768,18.5265,18.5762,18.6258,18.6755,18.7252,18.7748,18.8245,18.8742,18.9238,18.9735,19.0232,19.0728,19.1225,19.1722,19.2219,19.2715,19.3212,19.3709,19.4205,19.4702,19.5199,19.5695,19.6192,19.6689,19.7185,19.7682,19.8179,19.8675,19.9172,19.9669,20.0166,20.0662,20.1159,20.1656,20.2152,20.2649,20.3146,20.3642,20.4139,20.4636,20.5132,20.5629,20.6126,20.6623,20.7119,20.7616,20.8113,20.8609,20.9106,20.9603,21.0099,21.0596,21.1093,21.1589,21.2086,21.2583,21.3079,21.3576,21.4073,21.457,21.5066,21.5563,21.606,21.6556,21.7053,21.755,21.8046,21.8543,21.904,21.9536,22.0033,22.053,22.1026,22.1523,22.202,22.2517,22.3013,22.351,22.4007,22.4503,22.5,22.5497,22.5993,22.649,22.6987,22.7483,22.798,22.8477,22.8974,22.947,22.9967,23.0464,23.096,23.1457,23.1954,23.245,23.2947,23.3444,23.394,23.4437,23.4934,23.543,23.5927,23.6424,23.6921,23.7417,23.7914,23.8411,23.8907,23.9404,23.9901,24.0397,24.0894,24.1391,24.1887,24.2384,24.2881,24.3377,24.3874,24.4371,24.4868,24.5364,24.5861,24.6358,24.6854,24.7351,24.7848,24.8344,24.8841,24.9338,24.9834,25.0331,25.0828,25.1325,25.1821,25.2318,25.2815,25.3311,25.3808,25.4305,25.4801,25.5298,25.5795,25.6291,25.6788,25.7285,25.7781,25.8278,25.8775,25.9272,25.9768,26.0265,26.0762,26.1258,26.1755,26.2252,26.2748,26.3245,26.3742,26.4238,26.4735,26.5232,26.5728,26.6225,26.6722,26.7219,26.7715,26.8212,26.8709,26.9205,26.9702,27.0199,27.0695,27.1192,27.1689,27.2185,27.2682,27.3179,27.3675,27.4172,27.4669,27.5166,27.5662,27.6159,27.6656,27.7152,27.7649,27.8146,27.8642,27.9139,27.9636,28.0132,28.0629,28.1126,28.1623,28.2119,28.2616,28.3113,28.3609,28.4106,28.4603,28.5099,28.5596,28.6093,28.6589,28.7086,28.7583,28.8079,28.8576,28.9073,28.957,29.0066,29.0563,29.106,29.1556,29.2053,29.255,29.3046,29.3543,29.404,29.4536,29.5033,29.553,29.6026,29.6523,29.702,29.7517,29.8013,29.851,29.9007,29.9503,30]

def as_status_callback(msg:Int16):
    global AS_status, start_time
    AS_status = msg.data
    if (AS_status == 2 and start_time == 0):
        integral = 0
        start_time=time.time()
        last_time = time.time()

def motor_speed_callback(msg: Float32):
    global speed
    if msg.data < 3:
        speed = msg.data

def wheel_speed_callback(msg: Float32):
    global speed
    if msg.data >= 3:
        speed = msg.data

def timer_callback(event):
    global start_time,braking, speed
        
    if not braking and AS_status == 2:
            
        control_msg = Controls()

        control_msg.steering = 0

         
        control_msg.accelerator = feed_forward(speed)

        control_publisher.publish(control_msg)
        #rospy.logerr(control_msg)


def feed_forward(current: float):
        global start_time,braking,last_time, integral


        t = time.time()-start_time

        if t>profile_t[-1]:
            start_time = time.time()
            t=0

        i = 0
        while t > profile_t[i] and i<len(profile_t)-1:
            i+=1

        target_vx = profile_vx[i]
        target_acc = profile_ax[i]
        #240 en el suelo, 8 en borricas sin ruedas
        target_acc = target_acc*8*0.2

        rospy.loginfo([target_vx,current, target_acc])

        dt = time.time()-last_time
        last_time = time.time()

        error = target_vx - current
        integral += error*dt
        cmd_pid = KP*error + KI*integral

        cmd = cmd_pid + target_acc
        
        rospy.loginfo([cmd_pid,cmd])

        profile_msg = Float32MultiArray()
        profile_msg.data = [profile_vx[i], profile_ax[i], profile_t[i]]
        profile_publisher.publish(profile_msg)

        return max(min(cmd/230, 1),-1)

if __name__ == '__main__':
    rospy.init_node('feed_forward_test')

    start_time = 0
    AS_status = 0
    last_time = 0
    braking = False
    speed = 0
    integral = 0

    control_publisher = rospy.Publisher('/controls_pp', Controls, queue_size=1)
    braking_publisher = rospy.Publisher('/braking', Bool, queue_size=10)
    profile_publisher = rospy.Publisher('/profile', Float32MultiArray, queue_size=1)
    rospy.Subscriber('/wheel_speed', Float32, wheel_speed_callback,queue_size=1)
    rospy.Subscriber('/motor_speed', Float32, motor_speed_callback, queue_size=1)
    rospy.Subscriber('/can/AS_status',Int16, as_status_callback, queue_size=1)
    rospy.Timer(rospy.Duration(1.0/100), timer_callback)

    rospy.spin()
